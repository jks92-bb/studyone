--단일 실행 (CTRL + 엔터) / 스크립트 실행(전체코드 실행)F5
-- DATA BASE
--SQL 쿼리문 :  DBMS에서 CRUD 를 수행하기 위해 사용하는 코드
--- CRUD : CREATE/ READ/ UPDATE/ DELETE/

-- 환경설정 : 글꼴 크기.
-- DQL : 데이터 조회하는 언어
-- SELECT : 데이터 검색하는 문법     
-- SELECT : 속성이름 FROM 테이블 명[WHERE조건식];
-- DUAL : 임시테이블


SELECT
    length('장광수')
FROM
    dual;

SELECT
    lengthb('장광수')
FROM
    dual;      --한글은 한글자에 3Btye

SELECT
    length('JANG KWANG SU')
FROM
    dual;

SELECT
    lengthb('JANG KWANG SU')
FROM
    dual;

--WHERE절 조건식에 대해서 거짓이기 때문에, 검색결과 출력X
SELECT
    length('HELLO')
FROM
    dual
WHERE
    length('HELLO') >= 5;

-- DDL : 데이터 구조(DB,TABLE...)를 정의하는 언어
--     => CREATE, ALTER, DROP, TRUNCATE, RENAME

-- CREATE : 데이터를 저장할 공간을 "생성"
--CREATE TABLE 테이블명 (
--        속성이름 속성타입,
--        ....
--);

-- 테이블명 : STUDENT
-- 속성 : 학번, 이름, 나이, 학점
CREATE TABLE student (
    hak_bun VARCHAR2(10) PRIMARY KEY,
    name    VARCHAR2(20) NOT NULL,
    age     INT NOT NULL,
    score   FLOAT
);
-- NOT NULL : "NULL불가" 속성에 작성
-- PRIMARY KEY : 기본키, 데이터들끼리 구분하기 위한 속성에 부여

-- * : "전체"
SELECT
    *
FROM
    student;

SELECT
    hak_bun,
    name
FROM
    student;


-- VARCHAR2 타입과 INT, NUMBER를 주로 사용
-- *문자형
-- CHAR(n) : "고정" 길이를 갖는 문자열
--     => "무조건 n의 크기를 할당"
-- VARCHAR2(n) : "가변" 길이를 갖는 문자열
-- => "최대 크기를 n으로 갖고, 필요에 따라 0~n까지의 범위 할당"
--      "한글 하나에 대해, n개 중 3개의 공간을 차지한다."
-- NVARCHAR2(n):"가변" 길이를 갖는 문자열
-- => "최대 크기를 n으로 갖고, 필요에 따라 0~n까지의 범위 할당"
--      "한글 하나에 대해, n개 중 1개의 공간을 차지한다"



-- *숫자형
-- INT : 정수 숫자형
-- FLOAT : 실수 숫자형
-- NUMBER(p,s) : 정수/실수도 저장 가능한 숫자형
--       p ( 정수+실수 부분에서 최대로 저장 가능한 범위)
--       s ( 실수 부분에서 최대로 저장 가능한 범위)
--   속성명이 HEIGHT이고 속성타입입 NUMBER(4,1)이라 한다면
--     000.0 형태로 저장 가능 (EX1)142.4 90.5 50 등

-- 그 외에도 날짜 타입, LOB형도 있음 

-- DML : 데이터 조작하는 명령어
-- INSERT : 테이블에 데이터 삽입하는 명령어
-- INSERT INTO 테이블명 VALUES(데이터값1, 데이터값2,...);
--          속성들이 선언된 순서대로 데이터값을 삽입.
-- INSERT INTO 테이블명(속성명1, 속성명2,...) VALUES(데이터값1,데이터값2...);
-- 속성값1에는 데이터값1 삽입, 속성값2에는 데이터값2 삽입,...

INSERT INTO student VALUES (
    1823,
    '차아',
    23,
    4.3
);

SELECT
    *
FROM
    student;

-- DROP : 테이블을 삭제하는 명령어(테이블, 데이터 모두 삭제)
-- DROP TABLE [IF EXISTS] 테이블명;
-- TRUNCATE : 테이블을 삭제하는 명령어 (테이블의 형태는 남겨두고 데이터들만 모두 삭제)
-- TRUNCATE TABLE [IF EXISTS] 테이블명;
-- IF EXISTS 사용 시, 테이블이 존재할 때에만 명령문 수행.



-- ALTER :  데이터 구조에 대한 수정
-- => ADD, DROP, MODIFY, RENAME, RENAME COLUMN

-- ALTER :  칼럼 추가 (ADD)
-- ALTER TABLE 테이블명 ADD 추가할 _ 속성이름 추가할 _ 속성타입
ALTER TABLE STUDENT ADD GRADE INT;

-- ALTER : 칼럼 삭제(DROP)
-- ALTER TABLE 테이블명 DROP COLUMN 제거할 _ 속성이름 
ALTER TABLE STUDENT DROP COLUMN AGE;

--ALTER : 테이블명 변경(RENAME)
--ALTER TABLE 테이블명 RENAME TO 변경할_테이블명
ALTER TABLE STUDENT RENAME TO HAKSANG;


-- ALTER : 칼럼명 변경(RENAME COLUMN)
--ALTER TABLE 테이블명 RENAME COLUMN 기존_속성이름(칼럼명) TO 변경할_칼럼명

ALTER TABLE STUDENT RENAME COLUMN HAK_BUN TO NUM;
SELECT * FROM STUDENT;




TRUNCATE TABLE EXISTS student;     --"TABLE STUDENT가 잘렸습니다" 수행
DROP TABLE IF EXISTS student;         --"TABLE STUDENT가 삭제되었습니다." 수행
SELECT *FROM student;
SELECT *FROM haksang;

COMMIT;
    
    